[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/linh/KLTN/VexRiscv/src/main/scala/vexriscv/demo/Briey.scala, /home/linh/KLTN/VexRiscv/src/main/scala/vexriscv/plugin/myPlugin/MY_ALU_PLUGIN.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(vexriscv.demo.BrieyConfig, vexriscv.demo.BrieyDe2115, vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC, vexriscv.demo.Briey, vexriscv.plugin.MY_ALU_PLUGIN.IS_ALU, vexriscv.plugin.MY_ALU_PLUGIN, vexriscv.demo.BrieyDe0Nano, vexriscv.demo.BrieyWithMemoryInit)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(vexriscv.demo.BrieyConfig, vexriscv.demo.BrieyDe2115, vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC, vexriscv.demo.Briey, vexriscv.plugin.MY_ALU_PLUGIN.IS_ALU, vexriscv.plugin.MY_ALU_PLUGIN, vexriscv.demo.BrieyDe0Nano, vexriscv.demo.BrieyWithMemoryInit)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/linh/KLTN/VexRiscv/src/main/scala/vexriscv/demo/Briey.scala, /home/linh/KLTN/VexRiscv/src/main/scala/vexriscv/plugin/myPlugin/MY_ALU_PLUGIN.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to /home/linh/KLTN/VexRiscv/target/scala-2.11/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 5ab05e0 for Scala compiler version 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/linh/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.12.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/linh/KLTN/VexRiscv/target/scala-2.11/classes:/home/linh/.ivy2/cache/com.github.spinalhdl/spinalhdl-core_2.11/jars/spinalhdl-core_2.11-1.3.3.jar:/home/linh/.ivy2/cache/com.github.spinalhdl/spinalhdl-sim_2.11/jars/spinalhdl-sim_2.11-1.3.3.jar:/home/linh/.ivy2/cache/commons-io/commons-io/jars/commons-io-2.4.jar:/home/linh/.ivy2/cache/net.openhft/affinity/bundles/affinity-3.1.11.jar:/home/linh/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/linh/.ivy2/cache/com.intellij/annotations/jars/annotations-12.0.jar:/home/linh/.ivy2/cache/org.slf4j/slf4j-simple/jars/slf4j-simple-1.7.25.jar:/home/linh/.ivy2/cache/com.github.oshi/oshi-core/jars/oshi-core-3.4.0.jar:/home/linh/.ivy2/cache/net.java.dev.jna/jna-platform/jars/jna-platform-4.2.2.jar:/home/linh/.ivy2/cache/net.java.dev.jna/jna/jars/jna-4.2.2.jar:/home/linh/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.12.jar:/home/linh/.ivy2/cache/com.github.scopt/scopt_2.11/jars/scopt_2.11-3.4.0.jar:/home/linh/.ivy2/cache/com.github.spinalhdl/spinalhdl-lib_2.11/jars/spinalhdl-lib_2.11-1.3.3.jar:/home/linh/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.1.jar:/home/linh/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.2.jar:/home/linh/.ivy2/cache/org.yaml/snakeyaml/jars/snakeyaml-1.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 8.953827348 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC,ModifiedNames(changes = UsedName(synchronized,[Default]), UsedName(setCompositeName,[Default]), UsedName(setWeakName,[Default]), UsedName(getClass,[Default]), UsedName(reflectNames,[Default]), UsedName(finalize,[Default]), UsedName(getScalaTrace,[Default]), UsedName(getInstanceCounter,[Default]), UsedName(ne,[Default]), UsedName(unsetName,[Default]), UsedName(hashCode,[Default]), UsedName(dataType,[Default]), UsedName(getMode,[Default]), UsedName(notifyAll,[Default]), UsedName(getBitsWidth,[Default]), UsedName(setScalaLocated,[Default]), UsedName($init$,[Default]), UsedName(getRefOwnersChain,[Default]), UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(setPartialName,[Default]), UsedName(isUnnamed,[Default]), UsedName(!=,[Default]), UsedName(isWeak,[Default]), UsedName(getName,[Default]), UsedName(ALU_CALC,[Default]), UsedName(getDisplayName,[Default]), UsedName(refOwner,[Default]), UsedName(instanceCounter,[Default]), UsedName(isNamed,[Default]), UsedName(isOlderThan,[Default]), UsedName(getNameElseThrow,[Default]), UsedName(component,[Default]), UsedName(getScalaLocationLong,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getScalaLocationShort,[Default]), UsedName(==,[Default]), UsedName(globalData,[Default]), UsedName(isPriorityApplicable,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(nameableRef,[Default]), UsedName($asInstanceOf,[Default]), UsedName(setName,[Default]), UsedName(apply,[Default]), UsedName(name,[Default]), UsedName(RefOwnerType,[Default]), UsedName(foreachReflectableNameables,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(parentScope,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(setRefOwner,[Default]))) invalidates 1 classes due to The vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(synchronized,[Default]), UsedName(setCompositeName,[Default]), UsedName(setWeakName,[Default]), UsedName(getClass,[Default]), UsedName(reflectNames,[Default]), UsedName(finalize,[Default]), UsedName(getScalaTrace,[Default]), UsedName(getInstanceCounter,[Default]), UsedName(ne,[Default]), UsedName(unsetName,[Default]), UsedName(hashCode,[Default]), UsedName(dataType,[Default]), UsedName(getMode,[Default]), UsedName(notifyAll,[Default]), UsedName(getBitsWidth,[Default]), UsedName(setScalaLocated,[Default]), UsedName($init$,[Default]), UsedName(getRefOwnersChain,[Default]), UsedName(wait,[Default]), UsedName(isInstanceOf,[Default]), UsedName(setPartialName,[Default]), UsedName(isUnnamed,[Default]), UsedName(!=,[Default]), UsedName(isWeak,[Default]), UsedName(getName,[Default]), UsedName(ALU_CALC,[Default]), UsedName(getDisplayName,[Default]), UsedName(refOwner,[Default]), UsedName(instanceCounter,[Default]), UsedName(isNamed,[Default]), UsedName(isOlderThan,[Default]), UsedName(getNameElseThrow,[Default]), UsedName(component,[Default]), UsedName(getScalaLocationLong,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getScalaLocationShort,[Default]), UsedName(==,[Default]), UsedName(globalData,[Default]), UsedName(isPriorityApplicable,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(nameableRef,[Default]), UsedName($asInstanceOf,[Default]), UsedName(setName,[Default]), UsedName(apply,[Default]), UsedName(name,[Default]), UsedName(RefOwnerType,[Default]), UsedName(foreachReflectableNameables,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(parentScope,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(setRefOwner,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(vexriscv.plugin.MY_ALU_PLUGIN.ALU_CALC)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from vexriscv.plugin.MY_ALU_PLUGIN...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(vexriscv.plugin.MY_ALU_PLUGIN)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(vexriscv.plugin.MY_ALU_PLUGIN)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of vexriscv.demo.BrieyConfig. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(vexriscv.plugin.MY_ALU_PLUGIN,ModifiedNames(changes = UsedName(ALU_CALC,[Default]))) invalidates 1 classes due to The vexriscv.plugin.MY_ALU_PLUGIN has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ALU_CALC,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(vexriscv.plugin.MY_ALU_PLUGIN)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
